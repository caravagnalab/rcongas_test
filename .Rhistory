bottom_strip = plot_grid(
counts_plot$`chr15:67050001:102600000`,
counts_plot$`chr16:1:3750000`,
counts_plot$`chr18:32400001:55950000`,
clonalign_comparison_plot,
axis = 'b',
nrow = 1,
labels = c("e", "f", "g")
)
names(counts_plot)
bottom_strip = plot_grid(
plotlist = append(
counts_plot,
list(clonalign_comparison_plot)
),
axis = 'b',
nrow = 1,
# labels = c("e", "f", "g")
)
append(
counts_plot,
list(clonalign_comparison_plot)
) %>%  length
bottom_strip = plot_grid(
plotlist = append(
counts_plot,
list(clonalign_comparison_plot)
),
axis = 'b',
nrow = 1,
labels = c("e", "f", "g", 'h', 'i')
)
bottom_strip
Rcongas::plot_segment_density(fit, segments_ids[1])
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = segments_ids,
sum_denominator = FALSE
)
names(counts_plot) = segments_ids
counts_plot[[1]]
counts_plot[[2]]
counts_plot[[3]]
counts_plot[[5]]
counts_plot[[4]]
devtools::install_github('militeee/rcongas')
require(Rcongas)
require(tidyverse)
library(cowplot)
# Final model fit
fit = Rcongas::breast_xeno_10x_small_segments_no_norm
input_raw_counts_genes = Rcongas::get_input_raw_data(fit)
# DE plot
DE_full_plot = Rcongas::plot_DE_volcano(fit, annotate_top = 7) +
labs(title = "Differential Expression")
# Mixing
mixing_plot = Rcongas::plot_mixing_proportions(fit)
fit
# DE plot
DE_full_plot = Rcongas::plot_DE_volcano(fit, annotate_top = 7) +
labs(title = "Differential Expression")
# Mixing
mixing_plot = Rcongas::plot_mixing_proportions(fit)
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, alpha = 0.05) +
labs(title = "Breast cancer xenograft (10x scRNAseq)")
# Chromosome 15 special counts plot
segments_ids = Rcongas::get_clones_ploidy(fit) %>%
Rcongas:::idify() %>%
filter(highlight) %>%
pull(segment_id) %>%
unique()
segments_ids
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = segments_ids,
sum_denominator = FALSE
)
names(counts_plot) = segments_ids
counts_plot
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = segments_ids,
sum_denominator = TRUE
)
counts_plot
setwd("~/Documents/GitHub/rcongas_test/GBM_smartseq")
require(Rcongas)
require(tidyverse)
library(cowplot)
# Final model fit
fit_nt = Rcongas::GBM_smartseq_normal_vs_tumor
fit_t_14 = Rcongas::GBM_smartseq_tumor_only_df_14_no14
fit_t_5 = Rcongas::GBM_smartseq_tumor_only_df_5_no5
fit_t = fit_t_5
# fit = subclones
input_raw_counts_genes_nt = Rcongas::get_input_raw_data(fit_nt)
input_raw_counts_genes_t = Rcongas::get_input_raw_data(fit_t)
# DE plot
DE_full_plot_nt = Rcongas::plot_DE_volcano(fit_nt, annotate_top = 7, cut_pvalue = 0.05) +
labs(title = "Differential Expression (Tumour/ normal)")
DE_full_plot_t = Rcongas::plot_DE_volcano(fit_t, annotate_top = 7, cut_pvalue = 0.05) +
labs(title = "Differential Expression (Tumour)")
# Mixing
mixing_plot_nt = Rcongas::plot_mixing_proportions(fit_nt)
mixing_plot_t = Rcongas::plot_mixing_proportions(fit_t)
DE_full_plot_nt
DE_full_plot_t = Rcongas::plot_DE_volcano(fit_t, annotate_top = 7, cut_pvalue = 0.05) +
labs(title = "Differential Expression (Tumour)")
# Mixing
mixing_plot_nt = Rcongas::plot_mixing_proportions(fit_nt)
mixing_plot_t = Rcongas::plot_mixing_proportions(fit_t)
# Whole-genome plot
CNA_wg_plot_nt = Rcongas::plot_gw_cna_profiles(fit_nt, whole_genome = TRUE, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), Normal/tumour")
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = TRUE, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), tumour")
CNA_wg_plot_nt
CNA_wg_plot_t
CNA_wg_plot_nt
plot_highlights(fit_nt, alpha = 0.1)
plot_highlights(fit_t, alpha = 0.1)
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
# Whole-genome plot
CNA_wg_plot_nt = Rcongas::plot_gw_cna_profiles(fit_nt, whole_genome = TRUE, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), Normal and tumour cells")
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = TRUE, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), only tumour cellstumour") +
scale_color_brewer(palette = 'Set2')
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
Rcongas::plot_gw_cna_profiles(fit_nt, whole_genome = F, alpha = 0.1)
# Whole-genome plot
CNA_wg_plot_nt = Rcongas::plot_gw_cna_profiles(fit_nt, whole_genome = F, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), Normal and tumour cells")
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = F, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), only tumour cellstumour") +
scale_color_brewer(palette = 'Set2')
plot_highlights(fit_nt, alpha = 0.1)
plot_highlights(fit_t, alpha = 0.1)
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = F, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), only tumour cells") +
scale_color_brewer(palette = 'Set2')
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
# Whole-genome plot
CNA_wg_plot_nt = Rcongas::plot_gw_cna_profiles(fit_nt, whole_genome = F, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), Normal and tumour cells") +
theme(legend.position = 'right')
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = F, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), only tumour cells") +
scale_color_brewer(palette = 'Set2')+
theme(legend.position = 'right')
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
# Chromosome special counts plot
segments_ids = Rcongas::get_clones_ploidy(fit_nt, alpha = 0.1) %>%
Rcongas:::idify() %>%
filter(highlight) %>%
pull(segment_id)
segments_ids
counts_plot = NULL
counts_plot = Rcongas::plot_segment_density(
fit_nt,
segments_ids = segments_ids
)
counts_plot
# Chromosome special counts plot
segments_ids = Rcongas::get_clones_ploidy(fit_nt, alpha = 0.1) %>%
Rcongas:::idify() %>%
filter(highlight) %>%
pull(segment_id)
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
counts_plotpp
counts_plot[[4]]
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = F, alpha = 0.1) +
labs(title = FALSE) +
scale_color_brewer(palette = 'Set2')+
theme(legend.position = 'right')
# Whole-genome plot
CNA_wg_plot_nt = Rcongas::plot_gw_cna_profiles(fit_nt, whole_genome = F, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), running CONGAS with ormal and tumour cells") +
theme(legend.position = 'right')
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = F, alpha = 0.1) +
labs(title = FALSE) +
scale_color_brewer(palette = 'Set2')+
theme(legend.position = 'right')
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
# Whole-genome plot
CNA_wg_plot_nt = Rcongas::plot_gw_cna_profiles(fit_nt, whole_genome = F, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), running CONGAS with normal (cluster 1) and tumour cells") +
theme(legend.position = 'right')
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = F, alpha = 0.1) +
labs(title = "Run with just tumour cells") +
scale_color_brewer(palette = 'Set2')+
theme(legend.position = 'right')
plot_grid(
CNA_wg_plot_nt,
CNA_wg_plot_t,
ncol = 1
)
Rcongas:::get_cluster_assignments(CNA_wg_plot_nt)
Rcongas:::get_cluster_assignments(fit_nt)
# Mapping clustering assignments
first_run = data.frame()
# Mapping clustering assignments
clusters_run = data.frame()
clusters_run$first_run = Rcongas:::get_cluster_assignments(fit_nt)
clusters_run
# Mapping clustering assignments
clusters_run = NULL
clusters_run$first_run = Rcongas:::get_cluster_assignments(fit_nt)
clusters_run
# Mapping clustering assignments
clusters_run = data.frame(
cell = Rcongas:::get_cluster_assignments(fit_nt) %>% names,
cluster = Rcongas:::get_cluster_assignments(fit_nt)
)
clusters_run
# Mapping clustering assignments
clusters_run = data.frame(
cell = Rcongas:::get_cluster_assignments(fit_nt) %>% names,
first_cluster = Rcongas:::get_cluster_assignments(fit_nt)
)
Rcongas:::get_cluster_assignments(fit_t)
second_run = data.frame(
cell = Rcongas:::get_cluster_assignments(fit_nt) %>% names,
second_cluster = Rcongas:::get_cluster_assignments(fit_t)
)
# Mapping clustering assignments
first_run = data.frame(
cell = Rcongas:::get_cluster_assignments(fit_nt) %>% names,
first_cluster = Rcongas:::get_cluster_assignments(fit_nt)
)
second_run = data.frame(
cell = Rcongas:::get_cluster_assignments(fit_nt) %>% names,
second_cluster = Rcongas:::get_cluster_assignments(fit_t)
)
second_run = data.frame(
cell = Rcongas:::get_cluster_assignments(fit_t) %>% names,
second_cluster = Rcongas:::get_cluster_assignments(fit_t)
)
first_run
first_run %>% full_join(second_run)
first_run %>%
full_join(second_run) %>%
mutate(second_cluster = ifelse(is.na(second_cluster), "Missing", second_cluster))
first_run %>%
full_join(second_run) %>%
mutate(second_cluster = ifelse(is.na(second_cluster), "Missing", second_cluster))
joint_clusters = first_run %>%
full_join(second_run) %>%
mutate(second_cluster = ifelse(is.na(second_cluster), "Missing", second_cluster)) %>%
group_by(first_cluster, second_cluster) %>%
summarise(n = n())
joint_clusters
clonalign_comparison_plot = ggplot(joint_clusters,
aes(y = n, axis1 = first_cluster, axis2 = second_cluster)) +
geom_alluvium(aes(fill = second_cluster), width = 1 / 12) +
geom_stratum(width = 1 / 12,
fill = "black",
color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))
require(ggalluvial)
ggplot(joint_clusters,
aes(y = n, axis1 = first_cluster, axis2 = second_cluster)) +
geom_alluvium(aes(fill = second_cluster), width = 1 / 12) +
geom_stratum(width = 1 / 12,
fill = "black",
color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum)))
ggplot(joint_clusters,
aes(y = n, axis1 = first_cluster, axis2 = second_cluster)) +
geom_alluvium(aes(fill = second_cluster), width = 1 / 12) +
geom_stratum(width = 1 / 12,
fill = "black",
color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Tumour & Normal", "Tumour"),
expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set1")
ggplot(joint_clusters,
aes(y = n, axis1 = first_cluster, axis2 = second_cluster)) +
geom_alluvium(aes(fill = second_cluster), width = 1 / 12) +
geom_stratum(width = 1 / 12,
fill = "black",
color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Tumour & Normal", "Tumour"),
expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set2")
runs_comparison_plot = ggplot(joint_clusters,
aes(y = n, axis1 = first_cluster, axis2 = second_cluster)) +
geom_alluvium(aes(fill = second_cluster), width = 1 / 12) +
geom_stratum(width = 1 / 12,
fill = "black",
color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Tumour & Normal", "Tumour"),
expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
CNAqc:::my_ggplot_theme() +
guides(fill = guide_legend("cluster")) +
labs(title = "Comparison across runs", y = 'Cell')
runs_comparison_plot
runs_comparison_plot = ggplot(joint_clusters,
aes(y = n, axis1 = first_cluster, axis2 = second_cluster)) +
geom_alluvium(aes(fill = second_cluster), width = 1 / 12) +
geom_stratum(width = 1 / 12,
fill = "black",
color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Tumour & Normal", "Tumour"),
expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
CNAqc:::my_ggplot_theme() +
guides(fill = guide_legend("Clusters (second run)")) +
labs(title = "Comparison across runs", y = 'Cell')
runs_comparison_plot
plot_grid(
CNA_wg_plot_nt,
plot_grid(CNA_wg_plot_t, runs_comparison_plot, nrow = 1),
ncol = 1
)
plot_grid(
CNA_wg_plot_nt,
plot_grid(CNA_wg_plot_t, runs_comparison_plot, nrow = 1, rel_widths = c(1, .6)),
ncol = 1
)
# z-score input RNA with clustering assignments
rna_plot_raw_nt = Rcongas::plot_counts_rna_segments(fit_nt, normalised = FALSE, z_score = TRUE, alpha = 0.1)
rna_plot_raw_nt
rna_plot_raw_t = Rcongas::plot_counts_rna_segments(fit_t, normalised = FALSE, z_score = TRUE, alpha = 0.1)
rna_plot_raw_t
# z-score input RNA with clustering assignments
rna_plot_raw_nt = Rcongas::plot_counts_rna_segments(fit_nt,
normalised = FALSE,
sum_denominator = FALSE,
z_score = TRUE,
alpha = 0.1)
rna_plot_raw_nt
rna_plot_raw_t = Rcongas::plot_counts_rna_segments(fit_t,
normalised = FALSE,
sum_denominator = FALSE,
z_score = TRUE,
alpha = 0.1)
rna_plot_raw_t
# z-score input RNA with clustering assignments
rna_plot_raw_nt = Rcongas::plot_counts_rna_segments(fit_nt,
normalised = FALSE,
sum_denominator = FALSE,
z_score = TRUE,
alpha = 0.1)
rna_plot_raw_nt
setwd("~/Documents/GitHub/rcongas_test/breast_xeno_10x")
require(Rcongas)
require(tidyverse)
library(cowplot)
# Final model fit
fit = Rcongas::breast_xeno_10x_small_segments_no_norm
input_raw_counts_genes = Rcongas::get_input_raw_data(fit)
# DE plot
DE_full_plot = Rcongas::plot_DE_volcano(fit, annotate_top = 7) +
labs(title = "Differential Expression")
# Mixing
mixing_plot = Rcongas::plot_mixing_proportions(fit)
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, alpha = 0.05) +
labs(title = "Breast cancer xenograft (10x scRNAseq)")
# Chromosome 15 special counts plot
segments_ids = Rcongas::get_clones_ploidy(fit) %>%
Rcongas:::idify() %>%
filter(highlight) %>%
pull(segment_id) %>%
unique()
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = segments_ids,
sum_denominator = TRUE
)
names(counts_plot) = segments_ids
counts_plot[[1]]
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = segments_ids,
sum_denominator = FALSE
)
names(counts_plot) = segments_ids
counts_plot[[1]]
counts_plot[[2]]
counts_plot[[4]]
counts_plot[[3]]
segments_ids
counts_plot
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = segments_ids,
sum_denominator = TRUE
)
names(counts_plot) = segments_ids
counts_plot
setwd("~/Documents/GitHub/rcongas_test/GBM_smartseq")
require(Rcongas)
require(tidyverse)
library(cowplot)
# Final model fit
fit_nt = Rcongas::GBM_smartseq_normal_vs_tumor
fit_t_14 = Rcongas::GBM_smartseq_tumor_only_df_14_no14
fit_t_5 = Rcongas::GBM_smartseq_tumor_only_df_5_no5
fit_t = fit_t_5
# fit = subclones
input_raw_counts_genes_nt = Rcongas::get_input_raw_data(fit_nt)
input_raw_counts_genes_t = Rcongas::get_input_raw_data(fit_t)
# DE plot
DE_full_plot_nt = Rcongas::plot_DE_volcano(fit_nt, annotate_top = 7, cut_pvalue = 0.05) +
labs(title = "Differential Expression (Tumour/ normal)")
DE_full_plot_t = Rcongas::plot_DE_volcano(fit_t, annotate_top = 7, cut_pvalue = 0.05) +
labs(title = "Differential Expression (Tumour)")
# Mixing
mixing_plot_nt = Rcongas::plot_mixing_proportions(fit_nt)
mixing_plot_t = Rcongas::plot_mixing_proportions(fit_t)
# Whole-genome plot
CNA_wg_plot_nt = Rcongas::plot_gw_cna_profiles(fit_nt, whole_genome = F, alpha = 0.1) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq), running CONGAS with normal (cluster 1) and tumour cells") +
theme(legend.position = 'right')
CNA_wg_plot_t = Rcongas::plot_gw_cna_profiles(fit_t, whole_genome = F, alpha = 0.1) +
labs(title = "Run with just tumour cells") +
scale_color_brewer(palette = 'Set2')+
theme(legend.position = 'right')
# Mapping clustering assignments
first_run = data.frame(
cell = Rcongas:::get_cluster_assignments(fit_nt) %>% names,
first_cluster = Rcongas:::get_cluster_assignments(fit_nt)
)
second_run = data.frame(
cell = Rcongas:::get_cluster_assignments(fit_t) %>% names,
second_cluster = Rcongas:::get_cluster_assignments(fit_t)
)
joint_clusters = first_run %>%
full_join(second_run) %>%
mutate(second_cluster = ifelse(is.na(second_cluster), "Missing", second_cluster)) %>%
group_by(first_cluster, second_cluster) %>%
summarise(n = n())
require(ggalluvial)
runs_comparison_plot = ggplot(joint_clusters,
aes(y = n, axis1 = first_cluster, axis2 = second_cluster)) +
geom_alluvium(aes(fill = second_cluster), width = 1 / 12) +
geom_stratum(width = 1 / 12,
fill = "black",
color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Tumour & Normal", "Tumour"),
expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
CNAqc:::my_ggplot_theme() +
guides(fill = guide_legend("Clusters (second run)")) +
labs(title = "Comparison across runs", y = 'Cell')
plot_grid(
CNA_wg_plot_nt,
plot_grid(CNA_wg_plot_t, runs_comparison_plot, nrow = 1, rel_widths = c(1, .6)),
ncol = 1
)
# Chromosome special counts plot
segments_ids = Rcongas::get_clones_ploidy(fit_nt, alpha = 0.1) %>%
Rcongas:::idify() %>%
filter(highlight) %>%
pull(segment_id)
segments_ids
counts_plot = NULL
counts_plot = Rcongas::plot_segment_density(
fit_nt,
segments_ids = segments_ids
)
counts_plot
# z-score input RNA with clustering assignments
rna_plot_raw_nt = Rcongas::plot_counts_rna_segments(fit_nt,
normalised = FALSE,
sum_denominator = FALSE,
z_score = TRUE,
alpha = 0.1)
rna_plot_raw_nt
