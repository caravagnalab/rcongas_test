labels = c("a", "b")
)
mid_strip =  plot_grid(
rna_plot_raw,
# counts_plot,
DE_full_plot,
nrow = 1,
rel_widths = c(.7, .3),
align = 'h',
axis = 'b',
labels = c("c", "d")
)
bottom_strip = plot_grid(
counts_plot$`chr15:1:102600000`,
counts_plot$`chr18:7950001:55950000`,
clonalign_comparison_plot,
axis = 'b',
nrow = 1,
labels = c("e", "f", "g")
)
plot_grid(
top_strip,
mid_strip,
bottom_strip,
rel_heights = c(.8, 1, .8),
ncol = 1
) %>%
ggsave(filename = "breast_xeno_10x/Main_text.pdf",
width = 12,
height = 10)
plot_grid(
top_strip,
mid_strip,
bottom_strip,
rel_heights = c(.8, 1, .8),
ncol = 1
) %>%
ggsave(filename = "breast_xeno_10x/Main_text.png",
width = 12,
height = 10)
# plot_DE_gw(fit)
# plot_latent_variables(fit)
setwd("~/Documents/GitHub/rcongas_test/breast_xeno_10x")
source('plots_main_text.R')
source('plots_supplementary_material.R')
install.packages('entropy')
install.packages("entropy")
mutinformation
install.packages('infotheo')
require(infotheo)
mutinformation(c(1, 2, 3), c(1, 2, 3) ) / sqrt(entropy(c(1, 2, 3)) * entropy(c(1, 2, 3)))
intersection_congas_clonealign
mutinformation(
intersection_congas_clonealign$CONGAS,
intersection_congas_clonealign$clonealign
)
mutinformation(
intersection_congas_clonealign$CONGAS,
intersection_congas_clonealign$clonealign
)
intersection_congas_clonealign$CONGAS
intersection_congas_clonealign$clonealign
mutinformation(
intersection_congas_clonealign$CONGAS,
intersection_congas_clonealign$clonealign
) /
sqrt(
entropy(intersection_congas_clonealign$CONGAS) * entropy(intersection_congas_clonealign$clonealign)
)
require(Rcongas)
require(tidyverse)
library(cowplot)
# Final model fit
fit = Rcongas::breast_xeno_10x
input_raw_counts_genes = Rcongas::get_input_raw_data(fit)
# DE analysis -- DESeq2 NON funziona
# fit = Rcongas::calculate_DE(
#   x = fit,
#   input = input_raw_counts_genes,
#   clone1 = 1,
#   clone2 = 2,
#   method = "wilcox"
#   # method = "DESeq2"
# )
# DE plot
DE_full_plot = Rcongas::plot_DE_volcano(fit, annotate_top = 7) +
labs(title = "Differential Expression")
# Mixing
mixing_plot = Rcongas::plot_mixing_proportions(fit)
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, cutoff_p = 0.001) +
labs(title = "Breast cancer xenograft (10x scRNAseq)")
# Chromosome 15 special counts plot
segments_ids = Rcongas::get_input_segmentation(fit) %>% Rcongas:::idify() %>% pull(segment_id)
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = c(
"chr8:1:67500000",
"chr8:100800001:146400000",
"chr9:1:141300000",
"chr15:1:102600000",
"chr18:7950001:55950000"
)
)
# plot_segment_density(fit, "chr8:1:67500000")
# z-score input RNA with clustering assignments
rna_plot_raw = Rcongas::plot_counts_rna_segments(fit, z_score = TRUE, cutoff_p = 0.001)
# Comparison with clonealign
congas_clusterings = Rcongas::get_clusters(fit) %>% select(cell, cluster) %>%
rename(congas = cluster) %>% as_tibble()
load("~/Documents/GitHub/rcongas/data/intersection_congas_clonealign.rda")
intersection_congas_clonealign = intersection_congas_clonealign %>%
rename(CONGAS = cluster, clonealign = clone)
# clonealign_clusterings = Rcongas::get_clusters(fit) %>% select(cell, cluster) %>%
#   rename(clonealign = cluster) %>% as_tibble()
joint_clusters = intersection_congas_clonealign %>%
group_by(CONGAS, clonealign) %>%
summarise(n = n())
require(infotheo)
# mutinformation(
#   intersection_congas_clonealign$CONGAS,
#   intersection_congas_clonealign$clonealign
# ) /
#   sqrt(
#     entropy(intersection_congas_clonealign$CONGAS) * entropy(intersection_congas_clonealign$clonealign)
#   )
# joint_clusters = reshape2::melt(joint_clusters)
require(ggalluvial)
clonalign_comparison_plot = ggplot(
joint_clusters,
aes(y = n, axis1 = CONGAS, axis2 = clonealign)
) +
geom_alluvium(aes(fill = CONGAS), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("CONGAS", "clonealign"), expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set1") +
CNAqc:::my_ggplot_theme() +
guides(fill = guide_legend("cluster")) +
labs(title = "Comparison with clonealign", y = 'Cell', caption = 'Adjusted Rand Index: 0.61.')
# Strips
top_strip =  plot_grid(
CNA_wg_plot,
mixing_plot,
nrow = 1,
rel_widths = c(1, .3),
align = 'h',
labels = c("a", "b")
)
mid_strip =  plot_grid(
rna_plot_raw,
# counts_plot,
DE_full_plot,
nrow = 1,
rel_widths = c(.7, .3),
align = 'h',
axis = 'b',
labels = c("c", "d")
)
bottom_strip = plot_grid(
counts_plot$`chr15:1:102600000`,
counts_plot$`chr18:7950001:55950000`,
clonalign_comparison_plot,
axis = 'b',
nrow = 1,
labels = c("e", "f", "g")
)
plot_grid(
top_strip,
mid_strip,
bottom_strip,
rel_heights = c(.8, 1, .8),
ncol = 1
) %>%
ggsave(filename = "breast_xeno_10x_Main_text.pdf",
width = 12,
height = 10)
plot_grid(
top_strip,
mid_strip,
bottom_strip,
rel_heights = c(.8, 1, .8),
ncol = 1
) %>%
ggsave(filename = "breast_xeno_10x_Main_text.png",
width = 12,
height = 10)
# plot_DE_gw(fit)
# plot_latent_variables(fit)
#
Rcongas::get_counts(fit, 'chr11')
# Where we differ
M = Rcongas::get_counts(fit, 'chr11')
intersection_congas_clonealign
I = pio:::nmfy(
intersection_congas_clonealign$cell,
intersection_congas_clonealign$clonealign
)
I
M
M = Rcongas::get_counts(fit, 'chr11') %>%
mutate(cluster_clonealign = I[cell])
M
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100)
dev.off()
dev.off()
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100)
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme()
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2")
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2") + facet_wrap(~cluster_clonealign)
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2") + facet_wrap(~cluster_clonealign, ncol = 1)
ggplot(M, aes(n, fill = cluster)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set1")
plot_grid(
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2"),
ggplot(M, aes(n, fill = cluster)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set1"),
ncol = 1
)
# Where we differ
plot_comparison_noi_clonealign = function(fit, intersection_congas_clonealign, chr)
{
I = pio:::nmfy(
intersection_congas_clonealign$cell,
intersection_congas_clonealign$clonealign
)
M = Rcongas::get_counts(fit, chr) %>%
mutate(cluster_clonealign = I[cell])
plot_grid(
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2"),
ggplot(M, aes(n, fill = cluster)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set1"),
ncol = 1
)
}
M
# Where we differ
plot_comparison_noi_clonealign = function(fit, intersection_congas_clonealign, chr)
{
I = pio:::nmfy(
intersection_congas_clonealign$cell,
intersection_congas_clonealign$clonealign
)
M = Rcongas::get_counts(fit, chr) %>%
mutate(cluster_clonealign = I[cell]) %>%
Rcongas:::idify()
plot_grid(
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2") + facet_wrap(~segment_id),
ggplot(M, aes(n, fill = cluster)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set1")+ facet_wrap(~segment_id),
ncol = 1
)
}
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr1')
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr15')
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr18')
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr8')
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr1')
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr9')
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr6')
plot_grid(
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2") + facet_wrap(~segment_id) + labs(title = chr),
ggplot(M, aes(n, fill = cluster)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set1")+ facet_wrap(~segment_id),
ncol = 1
)
# Where we differ
plot_comparison_noi_clonealign = function(fit, intersection_congas_clonealign, chr)
{
I = pio:::nmfy(
intersection_congas_clonealign$cell,
intersection_congas_clonealign$clonealign
)
M = Rcongas::get_counts(fit, chr) %>%
mutate(cluster_clonealign = I[cell]) %>%
Rcongas:::idify()
plot_grid(
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2") + facet_wrap(~segment_id) + labs(title = chr),
ggplot(M, aes(n, fill = cluster)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set1")+ facet_wrap(~segment_id),
ncol = 1
)
}
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr1')
# Where we differ
plot_comparison_noi_clonealign = function(fit, intersection_congas_clonealign, chr)
{
I = pio:::nmfy(
intersection_congas_clonealign$cell,
intersection_congas_clonealign$clonealign
)
M = Rcongas::get_counts(fit, chr) %>%
mutate(cluster_clonealign = I[cell]) %>%
Rcongas:::idify()
plot_grid(
ggplot(M, aes(n, fill = cluster_clonealign)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set2") + facet_wrap( ~
segment_id) + labs(title = paste0("Chromosome ", chr)),
ggplot(M, aes(n, fill = cluster)) + geom_histogram(bins = 100) + CNAqc:::my_ggplot_theme() + scale_fill_brewer(palette = "Set1") + facet_wrap( ~
segment_id),
ncol = 1
)
}
ggarrange(
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr1'),
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr6'),
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr8'),
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr9'),
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr15'),
plot_comparison_noi_clonealign(fit, intersection_congas_clonealign, 'chr18'),
labels = c('a', 'b', 'c', 'd', 'e', 'f')
) %>%
ggsave(filename = "SM_breast_xeno_10x_comparison_clonealign.png",
width = 10,
height = 12)
setwd("~/Documents/GitHub/rcongas_test/melanoma_smartseq")
require(Rcongas)
require(tidyverse)
library(cowplot)
# Final model fit
fit = Rcongas::GBM_smartseq_normal_vs_tumor
input_raw_counts_genes = Rcongas::get_input_raw_data(fit)
input_raw_counts_genes
# DE plot
DE_full_plot = Rcongas::plot_DE_volcano(fit, annotate_top = 7) +
labs(title = "Differential Expression")
DE_full_plot
fit$DE$params
fit$DE$table
# DE plot
DE_full_plot = Rcongas::plot_DE_volcano(fit, annotate_top = 7, cut_pvalue = 0.05) +
labs(title = "Differential Expression")
DE_full_plot
# Mixing
mixing_plot = Rcongas::plot_mixing_proportions(fit)
mixing_plot
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, cutoff_p = 0.001) +
labs(title = "Breast cancer xenograft (10x scRNAseq)")
x=fit
# Segments ploidy
segments = Rcongas::get_clones_ploidy(x, chromosomes)
whole_genome =T
chromosomes = paste0("chr", c(1:22, "X", "Y"))
# Returned plot objects
segments_plot = NULL
# Segments ploidy
segments = Rcongas::get_clones_ploidy(x, chromosomes)
segments
# Test for the difference
test_pvalue = Rcongas::get_segment_test_counts(x,
group1 = 1,
group2 = 2,
cutoff_p = cutoff_p) %>%
dplyr::filter(sign) %>%
dplyr::filter(chr %in% chromosomes)
counts = get_counts(x) %>% Rcongas:::idify() %>% dplyr::group_split(segment_id)
get_counts(x)
best_model <- get_best_model(x)
best_model <- Rcongas:::get_best_model(x)
data_matrix = x$data$counts
data_matrix
best_model$parameters$norm_factor
normalisation_factors = best_model$parameters$norm_factor
length(data_matrix[,i])
ncol(data_matrix)
normalisation_factors = rep(1, ncol(data_matrix))
normalisation_factors
# Type of model used
best_model = Rcongas:::get_best_model(x)
best_model
best_model$run_information$model
best_model$run_information
best_model$run_information$model %>% print
best_model$run_information$model$convert
best_model$run_information$model$pyobj
require(Rcongas)
require(tidyverse)
library(cowplot)
# Final model fit
fit = Rcongas::GBM_smartseq_normal_vs_tumor
input_raw_counts_genes = Rcongas::get_input_raw_data(fit)
# DE plot
DE_full_plot = Rcongas::plot_DE_volcano(fit, annotate_top = 7, cut_pvalue = 0.05) +
labs(title = "Differential Expression")
DE_full_plot
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, cutoff_p = 0.001) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq)")
x=fit
# Returned plot objects
segments_plot = NULL
# Segments ploidy
segments = Rcongas::get_clones_ploidy(x, chromosomes)
chromosomes = paste0("chr", c(1:22, "X", "Y"))
# Segments ploidy
segments = Rcongas::get_clones_ploidy(x, chromosomes)
# Test for the difference
test_pvalue = Rcongas::get_segment_test_counts(x,
group1 = 1,
group2 = 2,
cutoff_p = cutoff_p) %>%
dplyr::filter(sign) %>%
dplyr::filter(chr %in% chromosomes)
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, cutoff_p = 0.001) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq)")
x$data$counts
any(is.double(x$data$counts))
devtools::load_all('.')
devtools::load_all('../rcongas/')
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, cutoff_p = 0.001) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq)")
fit$reference_genome
devtools::install_github('caravagn/CNAqc')
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, cutoff_p = 0.001) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq)")
devtools::load_all('../CNAqc/')
# Whole-genome plot
CNA_wg_plot = Rcongas::plot_gw_cna_profiles(fit, whole_genome = TRUE, cutoff_p = 0.001) +
labs(title = "Glioblastoma (Smart-Seq scRNAseq)")
CNA_wg_plot
# Chromosome 15 special counts plot
segments_ids = Rcongas::get_input_segmentation(fit) %>% Rcongas:::idify() %>% pull(segment_id)
segments_ids
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = c(
"chr2:272203:219146868",
"chr5:102886512:162944709",
"chr5:224633:180278393",
"chr10:3154461:133786586",
"chr7:44444122:158715219",
"chr7:881668:44121936",
"chr13:21086599:101294428"
)
)
counts_plot
# z-score input RNA with clustering assignments
rna_plot_raw = Rcongas::plot_counts_rna_segments(fit, z_score = TRUE, cutoff_p = 0.001)
rna_plot_raw
# Strips
top_strip =  plot_grid(
CNA_wg_plot,
mixing_plot,
nrow = 1,
rel_widths = c(1, .3),
align = 'h',
labels = c("a", "b")
)
require(cowplot)
# Strips
top_strip =  plot_grid(
CNA_wg_plot,
mixing_plot,
nrow = 1,
rel_widths = c(1, .3),
align = 'h',
labels = c("a", "b")
)
require(Rcongas)
require(tidyverse)
library(cowplot)
# Mixing
mixing_plot = Rcongas::plot_mixing_proportions(fit)
# Strips
top_strip =  plot_grid(
CNA_wg_plot,
mixing_plot,
nrow = 1,
rel_widths = c(1, .3),
align = 'h',
labels = c("a", "b")
)
mid_strip =  plot_grid(
rna_plot_raw,
# counts_plot,
DE_full_plot,
nrow = 1,
rel_widths = c(.7, .3),
align = 'h',
axis = 'b',
labels = c("c", "d")
)
bottom_strip = CNAqc:::eplot()
plot_grid(
top_strip,
mid_strip,
bottom_strip,
rel_heights = c(.8, 1, .8),
ncol = 1
) %>%
ggsave(filename = "GBM_SmartSeq_Main_text.pdf",
width = 12,
height = 10)
# Final model fit
fit = Rcongas::GBM_smartseq_normal_vs_tumor
# DE genes raw table
Rcongas::plot_raw_data(
get_input_raw_data(fit),
genes = Rcongas::get_DE_table(fit, cut_pvalue = 0.05) %>% pull(gene),
clusters = Rcongas::get_clusters(fit),
prompt = F,
fontsize_row = 6,
filename = "SM_breast_xeno_10x_rawdata.png",
width = 11,
height = 7.5
)
gw_DE_plot = plot_DE_gw(fit)
counts_plot = Rcongas::plot_segment_density(
fit,
segments_ids = Rcongas::get_input_segmentation(fit) %>% Rcongas:::idify() %>% pull(segment_id)
)
Rcongas:::plot_inference_report(fit) %>%
ggsave(filename = "SM_breast_xeno_10x_inference_report.png",
width = 10,
height = 12)
